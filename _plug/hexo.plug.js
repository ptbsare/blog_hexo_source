var O=Object.defineProperty;var p=(e,t)=>{for(var n in t)O(e,n,{get:t[n],enumerable:!0})};var h=typeof window>"u"&&typeof globalThis.WebSocketPair>"u";typeof Deno>"u"&&(self.Deno={args:[],build:{arch:"x86_64"},env:{get(){}}});var x=new Map,y=0;function m(e){self.postMessage(e)}h&&(globalThis.syscall=async(e,...t)=>await new Promise((n,o)=>{y++,x.set(y,{resolve:n,reject:o}),m({type:"sys",id:y,name:e,args:t})}));function v(e,t){h&&(self.addEventListener("message",n=>{(async()=>{let o=n.data;switch(o.type){case"inv":{let s=e[o.name];if(!s)throw new Error(`Function not loaded: ${o.name}`);try{let a=await Promise.resolve(s(...o.args||[]));m({type:"invr",id:o.id,result:a})}catch(a){console.error("An exception was thrown as a result of invoking function",o.name,"error:",a.message),m({type:"invr",id:o.id,error:a.message})}}break;case"sysr":{let s=o.id,a=x.get(s);if(!a)throw Error("Invalid request id");x.delete(s),o.error?a.reject(new Error(o.error)):a.resolve(o.result)}break}})().catch(console.error)}),m({type:"manifest",manifest:t}))}function $(e){let t=atob(e),n=t.length,o=new Uint8Array(n);for(let s=0;s<n;s++)o[s]=t.charCodeAt(s);return o}function A(e){typeof e=="string"&&(e=new TextEncoder().encode(e));let t="",n=e.byteLength;for(let o=0;o<n;o++)t+=String.fromCharCode(e[o]);return btoa(t)}async function q(e,t){if(typeof e!="string"){let n=new Uint8Array(await e.arrayBuffer()),o=n.length>0?A(n):void 0;t={method:e.method,headers:Object.fromEntries(e.headers.entries()),base64Body:o},e=e.url}return syscall("sandboxFetch.fetch",e,t)}globalThis.nativeFetch=globalThis.fetch;function Y(){globalThis.fetch=async function(e,t){let n=t&&t.body?A(new Uint8Array(await new Response(t.body).arrayBuffer())):void 0,o=await q(e,t&&{method:t.method,headers:t.headers,base64Body:n});return new Response(o.base64Body?$(o.base64Body):null,{status:o.status,headers:o.headers})}}h&&Y();function P(e,t){if(t(e))return[e];let n=[];if(e.children)for(let o of e.children)n=[...n,...P(o,t)];return n}function f(e,t){return P(e,n=>n.type===t)[0]}function w(e,t){P(e,t)}var i={};p(i,{confirm:()=>we,copyToClipboard:()=>ke,dispatch:()=>he,downloadFile:()=>ce,filterBox:()=>pe,flashNotification:()=>ue,fold:()=>Te,foldAll:()=>De,getCurrentPage:()=>j,getCursor:()=>z,getSelection:()=>J,getText:()=>V,getUiOption:()=>be,goHistory:()=>ae,hidePanel:()=>me,insertAtCursor:()=>xe,insertAtPos:()=>fe,moveCursor:()=>ye,navigate:()=>ee,openCommandPalette:()=>re,openPageNavigator:()=>te,openSearchPanel:()=>Ne,openUrl:()=>se,prompt:()=>Pe,redo:()=>Ue,reloadPage:()=>ne,reloadSettingsAndCommands:()=>ie,reloadUI:()=>oe,replaceRange:()=>ge,save:()=>Z,setPage:()=>Q,setSelection:()=>X,setText:()=>_,setUiOption:()=>ve,showPanel:()=>de,toggleFold:()=>Ce,undo:()=>Me,unfold:()=>Se,unfoldAll:()=>Fe,uploadFile:()=>le,vimEx:()=>Ae});typeof self>"u"&&(self={syscall:()=>{throw new Error("Not implemented here")}});var r=globalThis.syscall;function j(){return r("editor.getCurrentPage")}function Q(e){return r("editor.setPage",e)}function V(){return r("editor.getText")}function _(e){return r("editor.setText",e)}function z(){return r("editor.getCursor")}function J(){return r("editor.getSelection")}function X(e,t){return r("editor.setSelection",e,t)}function Z(){return r("editor.save")}function ee(e,t=!1,n=!1){return r("editor.navigate",e,t,n)}function te(e="page"){return r("editor.openPageNavigator",e)}function re(){return r("editor.openCommandPalette")}function ne(){return r("editor.reloadPage")}function oe(){return r("editor.reloadUI")}function ie(){return r("editor.reloadSettingsAndCommands")}function se(e,t=!1){return r("editor.openUrl",e,t)}function ae(e){return r("editor.goHistory",e)}function ce(e,t){return r("editor.downloadFile",e,t)}function le(e,t){return r("editor.uploadFile",e,t)}function ue(e,t="info"){return r("editor.flashNotification",e,t)}function pe(e,t,n="",o=""){return r("editor.filterBox",e,t,n,o)}function de(e,t,n,o=""){return r("editor.showPanel",e,t,n,o)}function me(e){return r("editor.hidePanel",e)}function fe(e,t){return r("editor.insertAtPos",e,t)}function ge(e,t,n){return r("editor.replaceRange",e,t,n)}function ye(e,t=!1){return r("editor.moveCursor",e,t)}function xe(e){return r("editor.insertAtCursor",e)}function he(e){return r("editor.dispatch",e)}function Pe(e,t=""){return r("editor.prompt",e,t)}function we(e){return r("editor.confirm",e)}function be(e){return r("editor.getUiOption",e)}function ve(e,t){return r("editor.setUiOption",e,t)}function Ae(e){return r("editor.vimEx",e)}function Te(){return r("editor.fold")}function Se(){return r("editor.unfold")}function Ce(){return r("editor.toggleFold")}function De(){return r("editor.foldAll")}function Fe(){return r("editor.unfoldAll")}function Me(){return r("editor.undo")}function Ue(){return r("editor.redo")}function Ne(){return r("editor.openSearchPanel")}function ke(e){return r("editor.copyToClipboard",e)}var g={};p(g,{parseMarkdown:()=>Ee});function Ee(e){return r("markdown.parseMarkdown",e)}var l={};p(l,{deleteAttachment:()=>qe,deleteFile:()=>_e,deletePage:()=>Ie,getAttachmentMeta:()=>Le,getFileMeta:()=>Qe,getPageMeta:()=>Ke,listAttachments:()=>Be,listFiles:()=>Ye,listPages:()=>He,listPlugs:()=>We,readAttachment:()=>Oe,readFile:()=>je,readPage:()=>Re,writeAttachment:()=>$e,writeFile:()=>Ve,writePage:()=>Ge});function He(e=!1){return r("space.listPages",e)}function Ke(e){return r("space.getPageMeta",e)}function Re(e){return r("space.readPage",e)}function Ge(e,t){return r("space.writePage",e,t)}function Ie(e){return r("space.deletePage",e)}function We(){return r("space.listPlugs")}function Be(){return r("space.listAttachments")}function Le(e){return r("space.getAttachmentMeta",e)}function Oe(e){return r("space.readAttachment",e)}function $e(e,t){return r("space.writeAttachment",e,t)}function qe(e){return r("space.deleteAttachment",e)}function Ye(){return r("space.listFiles")}function je(e){return r("space.readFile",e)}function Qe(e){return r("space.getFileMeta",e)}function Ve(e,t){return r("space.writeFile",e,t)}function _e(e){return r("space.deleteFile",e)}var c={};p(c,{run:()=>it});function it(e,t){return r("shell.run",e,t)}var d={};p(d,{parse:()=>st,stringify:()=>at});function st(e){return r("yaml.parse",e)}function at(e){return r("yaml.stringify",e)}async function ut(e,t){let n=await l.readPage(e),o=await g.parseMarkdown(n),s;return w(o,a=>{if(a.type!=="FencedCode")return!1;let u=f(a,"CodeInfo");if(t&&!u||t&&!t.includes(u.children[0].text))return!1;let b=f(a,"CodeText");return b?(s=b.children[0].text,!0):!1}),s}async function T(e,t=["yaml"]){let n=await ut(e,t);if(n!==void 0)try{return d.parse(n)}catch(o){throw console.error("YAML Page parser error",o),new Error(`YAML Error: ${o.message}`)}}var pt="SETTINGS";async function S(e,t){try{let o=(await T(pt,["yaml"])||{})[e];return o===void 0?t:o}catch(n){if(n.message==="Not found")return t;throw n}}function D(e,t,n=!1){if(C(e)&&!C(t)){let o=e.split("/")[0];return n&&(o=dt(o)),`${o}/${t}`}else return t}function dt(e){return e.startsWith("!")&&(e=e.substring(1),e.startsWith("localhost")?e="http://"+e:e="https://"+e),e}function C(e){return e.startsWith("!")}var mt=100;async function ft(e){let t=await S("maximumAttachmentSize",mt);if(typeof t!="number"&&await i.flashNotification("The setting 'maximumAttachmentSize' must be a number","error"),e.content.length>t*1024*1024){i.flashNotification(`Attachment is too large, maximum is ${t}MiB`,"error");return}let n=await i.prompt("File name for pasted attachment",e.name);if(!n)return;n=n.split(" ").join("-");let o=D(await i.getCurrentPage(),await i.getCurrentPage()+"/"+n);await l.writeAttachment(o,e.content);let s="",a="";if(s==="wikilink")a=`[[${o}]]`;else{let u=await i.getCurrentPage();u=u.split(" ").join("-"),a=`[${n}](${u.split("/").pop()+"/"+n})`}e.contentType.startsWith("image/")&&(a="!"+a),i.insertAtCursor(a)}async function F(e,t,n){let o=await i.uploadFile(t,n);await ft(o)}async function M(){console.log("npm install");try{let{code:e}=await c.run("npm",["install"]);console.log(e)}catch{}console.log("Npm Install Done!"),await i.flashNotification("Npm Install Done! ")}async function U(){console.log("hexo init");try{let{code:e}=await c.run("hexo",["init"]);console.log(e)}catch{}console.log("Hexo Init Done!"),await i.flashNotification("Hexo Init Done.")}async function N(){console.log("hexo new");let e=await i.prompt("New article layout(void to default layout):"),t=await i.prompt("New article title:");if(t){try{let{code:n}=await c.run("hexo",["new",e,t]);console.log(n)}catch{}console.log("Hexo New Done!"),await i.flashNotification("Hexo New Done!")}}async function k(){console.log("hexo generate");try{let{code:e}=await c.run("hexo",["generate"]);console.log(e)}catch{}console.log("Hexo Generate Done!"),await i.flashNotification("Hexo Generate Done!")}async function E(){console.log("hexo clean");try{let{code:e}=await c.run("hexo",["clean"]);console.log(e)}catch{}console.log("Hexo Clean Done!"),await i.flashNotification("Hexo Clean Done!")}async function H(){console.log("hexo server");try{let{code:e}=await c.run("hexo",["server","&"]);console.log(e)}catch{}console.log("Hexo Server Done!"),await i.flashNotification("Hexo Server Done!")}async function K(){console.log("hexo deploy");try{let{code:e}=await c.run("hexo",["deploy"]);console.log(e)}catch{}console.log("Hexo Deploy Done!"),await i.flashNotification("Hexo Deploy Done!")}async function R(){console.log("hexo generate && hexo deploy");try{let{code1:e}=await c.run("hexo",["generate"]);console.log(e);let{code2:t}=await c.run("hexo",["deploy"]);console.log(t)}catch{}console.log("Hexo Generate and Deploy Done!"),await i.flashNotification("Hexo Generate and Deploy Done!")}async function G(){console.log("kill `pidof hexo`");try{let{code:e}=await c.run("kill",["$(pidof hexo)"]);console.log(e)}catch{}console.log("Hexo Stop Server Done!"),await i.flashNotification("Hexo Stop Server Done!")}async function I(){console.log("git add . && git commit && git push");let e=await i.prompt("Revision name:");e||(e="Snapshot"),console.log("Revision name",e),console.log("Snapshotting the current space to git with commit message");let{code1:t}=await c.run("git",["add","./*"]);console.log("Git add code",t);try{let{code2:o}=await c.run("git",["commit","-a","-m",e]);console.log("Git commit code",o)}catch{}let{code3:n}=await c.run("git",["push"]);console.log("Git push code",n),console.log("Hexo Git Commit and Push Done!"),await i.flashNotification("Hexo Git Commit and Push Done!")}async function W(){let e=await i.prompt("Github Deploy(site) project URL (like: https://github.com/user/user.github.io):");if(!e)return;let t=await i.prompt("Github token:");if(!t||!await i.prompt("Your name:")||!await i.prompt("Your email:"))return;let s=e.split("/");s[2]=`${t}@${s[2]}`,e=s.join("/")+".git",await i.flashNotification("Now going to clone the deploy(site) repo, this may take some time."),await c.run("git",["clone",e,".deploy"]),console.log("Hexo Clone Deploy Repo Done!"),await i.flashNotification("Hexo Clone Deploy Repo Done!")}var B={uploadFile:F,npmInstall:M,init:U,newArticle:N,generate:k,clean:E,server:H,deploy:K,generateDeploy:R,stopServer:G,gitCommitPush:I,gitCloneDeployRepo:W},L={name:"hexo",requiredPermissions:["shell"],functions:{uploadFile:{path:"hexo.ts:uploadFile",command:{name:"Hexo: Upload File"}},npmInstall:{path:"hexo.ts:npmInstall",command:{name:"Hexo: npmInstall"}},init:{path:"hexo.ts:init",command:{name:"Hexo: Init"}},newArticle:{path:"hexo.ts:newArticle",command:{name:"Hexo: New"}},generate:{path:"hexo.ts:generate",command:{name:"Hexo: Generate"}},clean:{path:"hexo.ts:clean",command:{name:"Hexo: Clean"}},server:{path:"hexo.ts:server",command:{name:"Hexo: Server"}},deploy:{path:"hexo.ts:deploy",command:{name:"Hexo: Deploy"}},generateDeploy:{path:"hexo.ts:generateDeploy",command:{name:"Hexo: Generate and Deploy"}},stopServer:{path:"hexo.ts:stopServer",command:{name:"Hexo: Stop Server"}},gitCommitPush:{path:"hexo.ts:gitCommitPush",command:{name:"Hexo: Git Commit Push"}},gitCloneDeployRepo:{path:"hexo.ts:gitCloneDeployRepo",command:{name:"Hexo: Git Clone Deploy Repo"}}},assets:{}},dr={manifest:L,functionMapping:B};v(B,L);export{dr as plug};
